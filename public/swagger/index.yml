swagger: '2.0'
info:
  title: Federalist API
  description: API for interacting with Federalist
  version: "0.0.0"
host: federalist-staging.fr.cloud.gov
schemes:
  - https
basePath: /v0
produces:
  - application/json
paths:
  /build:
    post:
      summary: Create a build
      parameters:
        - name: build
          in: body
          schema:
            type: object
            properties:
              site:
                type: integer
                description: The ID of the site to build.
              branch:
                type: string
                description: |
                  The branch that should be built. If no branch is provided, the
                  site's default branch will be built.
      responses:
        200:
          description: The newly created build
          schema:
            $ref: "Build.json"
        400:
          description: Bad request
          schema:
            $ref: "Error.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /site/{site_id}/build:
    get:
      summary: Fetch all of the user's builds for a given site
      responses:
        200:
          description: An array of builds
          schema:
            type: array
            items:
              $ref: "Build.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /build/{id}:
    parameters:
    - name: id
      in: path
      description: The id of the build
      type: integer
      required: true
    get:
      summary: Fetch a build by its ID
      responses:
        200:
          description: The build object specified by the ID
          schema:
            $ref: "Build.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
  /build/{id}/status/{token}:
    parameters:
    - name: id
      in: path
      description: The id of the build
      type: integer
      required: true
    - name: token
      in: path
      description: Federalist's secret build token.
      type: string
      required: true
    post:
      summary: |
        Update a build's status. This endpoint is designed to be used by the
        build container to update the build's status when the build is done with
        its work.
      parameters:
      - name: status
        in: body
        description: The build container's status
        required: true
        schema:
          type: object
          properties:
            status:
              description: The build container's exit code
              type: string
            message:
              description: The error message associated with the build. Empty if status is "0"
              type: string
      responses:
        200:
          description: Acknowledgement that the build has been updated
        400:
          description: Bad request
          schema:
            $ref: "Error.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
  /build/{build_id}/log/{token}:
    parameters:
    - name: build_id
      in: path
      description: The id of the build
      type: integer
      required: true
    - name: token
      in: path
      description: Federalist's secret build token.
      type: string
      required: true
    post:
      summary: Add build container output to a build by creating a build log record
      responses:
        200:
          description: Acknowledgement that the build log was created
          schema:
            $ref: "BuildLog.json"
        400:
          description: Bad request
          schema:
            $ref: "Error.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
  /build/{build_id}/log:
    parameters:
    - name: build_id
      in: path
      description: The id of the build
      type: integer
      required: true
    get:
      summary: Fetch all build logs associated with a build
      responses:
        200:
          description: An array of the build logs associated with the build
          schema:
            type: array
            items:
              $ref: "BuildLog.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
  /site:
    get:
      summary: Fetch all of the current user's sites
      responses:
        200:
          description: An array of all sites associated with the current user
          schema:
            type: array
            items:
              $ref: "Site.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
    post:
      summary: Create a site
      parameters:
        - name: site
          in: body
          schema:
            type: object
            properties:
              demoBranch:
                type: string
                description: The name of the branch served on the demo URL
              demoDomain:
                type: string
                description: The domain where the demo branch's site is served
              config:
                type: string
                description: Jekyll configs for the site.
              defaultBranch:
                type: string
                description: The default branch for the site.
              engine:
                type: string
                description: The build engine to use when building the new site
              owner:
                type: string
                description: The owner of the GitHub repo for the site
              previewConfig:
                type: string
                description: Jekyll configs for the site in the preview environment
              demoConfig:
                type: string
                description: Jekyll configs for the site demo
              repository:
                type: string
                description: The name of the GitHub repository for the site
              template:
                type: string
                description: |
                  The name of a Federalist site template. If provided, the a new
                  repo will be created from the repo for the given template. If
                  a template is not provided, Federalist will not create a new
                  repo and will instead expect to build a site from an existing
                  repo.
      responses:
        200:
          description: The newly created site
          schema:
            $ref: "Site.json"
        400:
          description: Bad request
          schema:
            $ref: "Error.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /site/{id}:
    parameters:
    - name: id
      in: path
      description: The id of the site
      type: integer
      required: true
    get:
      summary: Fetch the data for a Federalist site
      responses:
        200:
          description: The site object for the given ID
          schema:
            $ref: "Site.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
    put:
      summary: Update the data for a Federalist site. This action will trigger a rebuild of the site.
      parameters:
        - name: site
          in: body
          schema:
            type: object
            properties:
              demoBranch:
                type: string
                description: The name of the branch served on the demo URL
              demoDomain:
                type: string
                description: The domain where the demo branch's site is served
              config:
                type: string
                description: Jekyll configs for the site.
              defaultBranch:
                type: string
                description: The default branch for the site.
              domain:
                type: string
                description: The domain where the site is served
              engine:
                type: string
                description: The build engine to use when building the new site
              owner:
                type: string
                description: The owner of the GitHub repo for the site
              previewConfig:
                type: string
                description: Jekyll configs for the site in the preview environment
              demoConfig:
                type: string
                description: Jekyll configs for the site demo
              repository:
                type: string
                description: The name of the GitHub repository for the site
      responses:
        200:
          description: The updated site object
          schema:
            $ref: "Site.json"
        400:
          description: Bad request
          schema:
            $ref: "Error.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
    delete:
      summary: Delete a site from Federalist
      responses:
        200:
          description: Acknowledgement that the site was deleted
          schema:
            $ref: "Site.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: Not found
          schema:
            $ref: "Error.json"
  /site/{site_id}/published-branch:
    parameters:
    - name: site_id
      in: path
      description: The id of the site
      type: integer
      required: true
    get:
      summary: Fetch all of the branches published to S3 for the given site
      responses:
        200:
          description: An array of branches published to S3
          schema:
            type: array
            items:
              $ref: "PublishedBranch.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /site/{site_id}/published-branch/{branch}:
    parameters:
    - name: site_id
      in: path
      description: The id of the site
      type: integer
      required: true
    - name: branch
      in: path
      description: The name of the branch
      type: string
      required: true
    get:
      summary: Fetch metadata about what's published for the site at the given branch
      responses:
        200:
          description: A published branch object representing the branch published to S3
          schema:
            $ref: "PublishedBranch.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /site/{site_id}/published-branch/{branch}/published-file:
    parameters:
    - name: site_id
      in: path
      description: The id of the site
      type: integer
      required: true
    - name: branch
      in: path
      description: The name of the branch
      type: string
      required: true
    get:
      summary: Fetch the list of files that are published to the given branch for the given site
      responses:
        200:
          description: A list of files published to the branch
          schema:
            type: array
            items:
              $ref: "PublishedFile.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /site/user:
    post:
      summary: Add the current user to a site based on the owner and repository name
      parameters:
        - name: site
          in: body
          schema:
            type: object
            properties:
              owner:
                type: string
                description: The owner of the GitHub repo for the site
              repository:
                type: string
                description: The name of the GitHub repository for the site
      responses:
        200:
          description: A site object representing the site the user was added to
          schema:
            $ref: "Site.json"
        400:
          description: Bad request
          schema:
            $ref: "Error.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
        404:
          description: The site the user is to be added to cannot be found
          schema:
            $ref: "Error.json"
  /me:
    get:
      summary: Fetch data for the current user
      responses:
        200:
          description: A user object representing the current Federalist user
          schema:
            $ref: "User.json"
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
  /user/usernames:
    get:
      summary: Fetch the usernames for every user in federalist
      responses:
        200:
          description: An array of usernames with an element for each Federalist user
          schema:
            type: array
            items:
              type: string
        403:
          description: Not authorized
          schema:
            $ref: "Error.json"
